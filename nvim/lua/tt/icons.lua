--- Defines which kind source to use
local kind_source = _G.IsWSL() and "default" or "vscode"

local kind = {
    default = {
        Class = "Û∞†±  ",
        Color = "Û∞èò  ",
        Constant = "Û∞èø  ",
        Constructor = "Ôê£  ",
        Enum = "ÔÖù  ",
        EnumMember = "ÔÖù  ",
        Event = "ÔÉß  ",
        Field = "Û∞ú¢  ",
        File = "Û∞àô  ",
        Folder = "Û∞âã  ",
        Function = "Û∞äï  ",
        Interface = "ÔÉ®  ",
        Keyword = "Û∞åã  ",
        Method = "Û∞Üß  ",
        Module = "Ôíá  ",
        Operator = "Û∞Üï  ",
        Property = "Û∞ú¢  ",
        Reference = "Û∞àá  ",
        Snippet = "Ôëè  ",
        Struct = "Û∞ôÖ  ",
        Text = "Û∞âø  ",
        TypeParameter = "  ",
        Unit = "Û∞ë≠  ",
        Value = "Û∞é†  ",
        Variable = "Û∞Ä´  ",
    },
    -- https://github.com/hrsh7th/nvim-cmp/wiki/Menu-Appearance#how-to-add-visual-studio-code-codicons-to-the-menu
    vscode = {
        Class = "Ó≠õ  ",
        Color = "Ó≠ú  ",
        Constant = "Ó≠ù  ",
        Constructor = "Ó™å  ",
        Enum = "Ó™ï  ",
        EnumMember = "Ó™ï  ",
        Event = "Ó™Ü  ",
        Field = "Ó≠ü  ",
        File = "Ó©ª  ",
        Folder = "Ó™É  ",
        Function = "Ó™å  ",
        Interface = "Ó≠°  ",
        Keyword = "Ó≠¢  ",
        Method = "Ó™å  ",
        Module = "Ó™ã  ",
        Operator = "Ó≠§  ",
        Property = "Ó≠•  ",
        Reference = "Ó™î  ",
        Snippet = "Óûñ",
        Struct = "Ó™ë  ",
        Text = "Ó™ì  ",
        TypeParameter = "Ó™í  ",
        Unit = "Ó™ñ  ",
        Value = "Ó™ï  ",
        Variable = "Ó™à  ",
    },
}

local kind_trimmed = (function()
    local result = {}
    for key, value in pairs(kind[kind_source]) do
        result[key] = require("tt.utils").trim(value)
    end
    return result
end)()

local diagnostics = {
    Error = "ÔÅó ",
    Warn = "ÔÅ± ",
    Hint = "Ó©° ",
    Info = "ÔÅö ",
}

local git = {
    Added = "ÔÉæ ",
    Modified = "ÔÖã ",
    Removed = "ÔÖÜ ",
}

local misc = {
    AlignRight = "ÔÄ∏",
    ArrowColappsed = "Ó™∂",
    ArrowCollapsedSmall = "Ôë†",
    ArrowExpanded = "Ó™¥",
    ArrowExpandedSmall = "Ôëº",
    ArrowRight = "‚ûú",
    ArrowSouthWest = "Û∞ÅÇ",
    BigCircle = "ÓÆ¥",
    BigUnfilledCircle = "ÓÆµ",
    Branch = "Ôêò",
    Bug = "Ó™Ø",
    BugColored = "üêû",
    Bulb = "Û∞åµ",
    BulbColored = "üí°",
    Bullets = "ÔØü",
    Calendar = "ÔÑ≥",
    CallIncoming = "Ô£∂",
    CallOutgoing = "Ô£∫",
    CheckMark = "‚úì",
    ChevronRight = ">",
    Circle = "‚óè",
    CodeInspect = "ÓØë",
    CurtainsClosed = "Û±°á",
    CurtainsOpen = "Û±°Ü",
    Database = "Û∞Üº",
    Edit = "ÔÅÑ",
    Ellipsis = "‚Ä¶",
    LeftFilledArrow = "ÓÇ≤",
    LeftHalfCircle = "ÓÇ∂",
    LeftUnfilledArrow = "ÓÇ≥",
    Owl = "Óû°",
    Plug = "Ôá¶",
    RightFilledArrow = "ÓÇ∞",
    RightHalfCircle = "ÓÇ¥",
    RightUnfilledArrow = "ÓÇ±",
    Search = "Ô°à",
    Selection = "ÓÆÖ",
    Star = "*",
    VerticalShadowedBox = "ÓÇº ",
    XMark = "‚úó",
}

local document = {
    Document = "Û∞àî",
    DocumentSearch = "Û∞±º",
    DocumentWord = "Û∞àô",
    Documents = "Û∞à¢",
    FileEye = "Û∞∑ä",
    FolderClosed = "Óóø",
    FolderConfig = "Óóº",
    FolderEmpty = "Û∞âñ",
    FolderOpen = "Óóæ",
}

return {
    kind = kind[kind_source],
    breadcrumps = kind_trimmed,
    diagnostics = diagnostics,
    document = document,
    git = git,
    misc = misc,
}
