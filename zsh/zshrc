# This is required to load zsh along with everything else as sudo
# This effectively ignores permission issues and loads the system normally
ZSH_DISABLE_COMPFIX=true

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"

# Path to Homebrew executable
export PATH=/opt/homebrew/bin:$PATH

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
zstyle ':omz:update' mode disabled  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 7

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Load ssh-keys for the ssh-agent lazy, on first use
zstyle :omz:plugins:ssh-agent lazy yes

# Source forgit (needs to be sourced before the plugin is loaded)
[ -f ~/.forgit.zsh ] && . ~/.forgit.zsh

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-autosuggestions fast-syntax-highlighting colored-man-pages ssh-agent forgit autoupdate jq mise)

# Fire up oh-my-zsh
source $ZSH/oh-my-zsh.sh

# Enable Powerlevel10k instant prompt.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block, everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Set history configuration settings
HIST_STAMPS="%d/%m/%Y %T"
HISTSIZE=1000000000
SAVEHIST=$HISTSIZE
HISTFILE=$HOME/.zsh_history

# setopt configurations
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_DUPS
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_SPACE
setopt HIST_SAVE_NO_DUPS
setopt SHARE_HISTORY
unsetopt histverify

# Make nvim my default editor
export VISUAL=nvim
export EDITOR="$VISUAL"

# Setup the path for ripgrep configuration
export RIPGREP_CONFIG_PATH="$HOME/.config/rg/config"

# Add ~/.local/bin to PATH
export PATH="$HOME/.local/bin:$PATH"

# Activate mise
if command -v mise &>/dev/null; then
  eval "$(mise activate zsh)"
fi

# Activate zoxide
if command -v zoxide &>/dev/null; then
    eval "$(zoxide init zsh)"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[ ! -f ~/.p10k.zsh ] || . ~/.p10k.zsh

# Source my custom aliases
[ -f ~/.zsh_aliases ] && . ~/.zsh_aliases

# Source my custom functions
[ -f ~/.zsh_functions ] && . ~/.zsh_functions

# Source fzf, to be able to use it
[ -f ~/.fzf.zsh ] && . ~/.fzf.zsh

# Source my fzf configurations
[ -f ~/.fzf.config ] && . ~/.fzf.config

# Setup custom keybinds
# '^M' or '\n' play the role of <Enter> so that the command can run automatically
bindkey -s '^F' 'foc\n'
bindkey -s '^G' 'frg\n'
bindkey -s '^R' 'fr\n'
bindkey -s '^H' 'fh\n'
bindkey -s '^L' 'lazygit\n'
bindkey -s '^V' 'sjdk\n'
bindkey -s '^P' 'spy\n'

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/anaconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/anaconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/anaconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/anaconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Add gnubin to path
export PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"

# Set to the default JDK
export JAVA_HOME=`/usr/libexec/java_home -v 21`

# Environment variables need to be setup before you can start using fnm.
# This is done by evaluating the output of fnm env.
# To automatically run fnm use when a directory contains a .node-version or .nvmrc files
eval "$(fnm env --use-on-cd)"

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/alexioualexandros/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)

# Setup the path for ripgrep configuration
export RIPGREP_CONFIG_PATH="$HOME/.config/rg/config"

# Activate mise
if command -v mise &>/dev/null; then
  eval "$(mise activate zsh)"
fi

# Add ~/.local/bin to PATH
export PATH="$HOME/.local/bin:$PATH"

# Neovide config variables
export NEOVIDE_FRAMELESS=true
export NEOVIDE_FRAME=none
