# ------------------ Fuzzy Configuration Options ------------------- #
FZF_COMMON_OPTIONS="
    --bind='?:toggle-preview'
    --bind='ctrl-u:preview-page-up'
    --bind='ctrl-d:preview-page-down'
    --height='80%'
    --multi
    --layout=reverse
    --border
    --preview-window 'right:50%:hidden:wrap'
    --preview '([[ -d {} ]] && tree -C {}) || ([[ -f {} ]] && bat --style=full --color=always {}) || echo {}'"

command -v fd > /dev/null  && export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
command -v bat > /dev/null && command -v tree > /dev/null && export FZF_DEFAULT_OPTS="$FZF_COMMON_OPTIONS"
command -v fd > /dev/null  && export FZF_ALT_C_COMMAND='fd . $HOME --type d --hidden --follow --exclude .git'
command -v fd > /dev/null  && export FZF_CTRL_T_COMMAND='fd . $HOME --type f --type d --hidden --follow --exclude .git'

# ------------------------ Helper Functions ------------------------ #
# --------- https://github.com/junegunn/fzf/wiki/examples ---------- #

# fo - fuzzy finder open files
#   - CTRL-O to open with `subl` command,
#   - CTRL-E or Enter key to open with the $EDITOR
fo() {
  local out file key
  local IFS=$'\n'
  out=("$(fzf --query="$1" --exit-0 --expect=ctrl-o,enter)")
  key=$(head -1 <<< "$out")
  file=$(head -2 <<< "$out" | tail -1)
  if [ -n "$file" ]; then
    [ "$key" = ctrl-o ] && subl "$file" || ${EDITOR} "$file"
  fi
}

# vf - fuzzy open with vim from anywhere
# zsh autoload function
fv() {
  local files
  files=(${(f)"$(locate -Ai -0 $@ | grep -z -vE '~$' | fzf --read0 -0 -1 -m)"})
  if [[ -n $files ]]
  then
     nvim -- $files
     print -l $files[1]
  fi
}

# fkill - kill processes, list only the ones you can kill
fkill() {
    local pid 
    if [ "$UID" != "0" ]; then
        pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
    else
        pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
    fi  

    if [ "x$pid" != "x" ]
    then
        echo $pid | xargs kill -${1:-9}
    fi  
}

# cd - Like normal cd but opens an interactive navigation window when called with no arguments
cd() {
    if [[ "$#" != 0 ]]; then
        builtin cd "$@";
        return
    fi
    while true; do
        local lsd=$(echo ".." && ls -p | grep '/$' | sed 's;/$;;')
        local dir="$(printf '%s\n' "${lsd[@]}" |
            fzf --reverse --preview '
                __cd_nxt="$(echo {})";
                __cd_path="$(echo $(pwd)/${__cd_nxt} | sed "s;//;/;")";
                echo $__cd_path;
                echo;
                ls -p --color=always "${__cd_path}";
        ')"
        [[ ${#dir} != 0 ]] || return 0
        builtin cd "$dir" &> /dev/null
    done
}

# z - like normal z when used with arguments but displays an fzf prompt when used without
unalias z 2> /dev/null
z() {
  [ $# -gt 0 ] && _z "$*" && return
  cd "$(_z -l 2>&1 | fzf --height 40% --nth 2.. --reverse --inline-info +s --tac --query "${*##-* }" \
  | sed 's/^[0-9,.]* *//')"
}

# fman - Quickly search for man pages through fzf
#  -- if arguments are supplied it will open the first argument's man page with fzf piped
fman() {
    if [ $# -gt 0 ]; then
        man "$1" | fzf
    else
        man -k . | fzf --prompt='Man> ' | awk '{print $1}' | xargs -r man
    fi
}
